name: Run JMeter Test

# Allow manual trigger with inputs
on:
  workflow_dispatch:
    inputs:
      jmx_path:
        description: 'Path to .jmx file in repo'
        required: true
        default: 'HospyReport011025.jmx'
      threads:
        description: 'Threads (for information / property override)'
        required: false
        default: '2'
      loops:
        description: 'Loop count inside test (if using property override)'
        required: false
        default: '200'
      test_duration_seconds:
        description: 'Max test duration seconds (0 = not used)'
        required: false
        default: '0'

jobs:
  jmeter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java (OpenJDK 11)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Download Apache JMeter 5.5
        run: |
          JMETER_VERSION=5.5
          wget -q "https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz"
          tar -xzf apache-jmeter-${JMETER_VERSION}.tgz
          chmod +x apache-jmeter-${JMETER_VERSION}/bin/*.sh
          ls -la apache-jmeter-${JMETER_VERSION}

      - name: Prepare test folder
        # copy jmx and any CSVs into working dir if they are in subfolders
        run: |
          ls -la
          mkdir -p jmeter_work
          cp -r ${{ github.workspace }}/* jmeter_work/ || true
          ls -la jmeter_work

      - name: Run JMeter (headless)
        id: run_jmeter
        env:
          JMETER_HOME: ${{ runner.workspace }}/apache-jmeter-5.5
        run: |
          set -e
          cd jmeter_work

          # inputs:
          JMX_PATH="${{ github.event.inputs.jmx_path }}"
          THREADS="${{ github.event.inputs.threads }}"
          LOOPS="${{ github.event.inputs.loops }}"
          DURATION="${{ github.event.inputs.test_duration_seconds }}"

          echo "Running JMeter: $JMX_PATH threads=$THREADS loops=$LOOPS duration=$DURATION"

          # If you want to pass threads/loops as JMeter properties, use -Jprop=value
          # Adjust these property names to match what your .jmx expects (e.g., ${__P(threads,10)})
          PROPS=""
          PROPS="$PROPS -Jthreads=${THREADS}"
          PROPS="$PROPS -Jloops=${LOOPS}"

          # optional: stop test after DURATION seconds (if > 0)
          if [ "$DURATION" != "0" ] && [ "$DURATION" != "" ]; then
            # use -G or -J to pass duration to test plan if plan supports it,
            # or use timeout as fallback to forcibly stop
            echo "Will enforce max duration with timeout: ${DURATION}s"
            timeout "${DURATION}s" "${JMETER_HOME}/bin/jmeter" -n -t "${JMX_PATH}" -l results.jtl ${PROPS} -JtestStartTime=$(date +%s)
            RC=$?
            if [ $RC -eq 124 ]; then
              echo "JMeter run timed out (killed by timeout)."
            fi
          else
            "${JMETER_HOME}/bin/jmeter" -n -t "${JMX_PATH}" -l results.jtl ${PROPS}
          fi

          # generate HTML report (if results.jtl exists)
          if [ -f results.jtl ]; then
            echo "Generating HTML report..."
            REPORT_DIR=report
            rm -rf "${REPORT_DIR}" || true
            "${JMETER_HOME}/bin/jmeter" -g results.jtl -o "${REPORT_DIR}"
            echo "Report created at ${REPORT_DIR}/index.html"
            ls -la "${REPORT_DIR}"
          else
            echo "No results.jtl found; skipping report generation."
          fi

      - name: Upload JMeter report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-report
          path: |
            jmeter_work/results.jtl
            jmeter_work/report

      - name: Print summary (small)
        if: always()
        run: |
          echo "Artifacts uploaded. Visit the Actions run page and download 'jmeter-report'."
